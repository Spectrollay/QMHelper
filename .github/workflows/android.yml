name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: true
      CCACHE_MAXSIZE: 1G

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}

      - name: Generate signing config
        run: |
          key_base64="${{ secrets.SIGNING_KEY }}"
          echo -n "$key_base64" | base64 -d > signing.jks
          echo "releaseStoreFile=signing.jks" >> gradle.properties
          echo "releaseStorePassword=android" >> gradle.properties
          echo "releaseKeyAlias=androiddebugkey" >> gradle.properties
          echo "releaseKeyPassword=android" >> gradle.properties

      - name: Build with Gradle
        run: |
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          ./gradlew -PbuildWithGitSuffix=true assembleRelease assembleDebug

      - name: Upload built apk
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: snapshot
          path: |
            ${{ github.workspace }}/app/build/outputs/apk
            ${{ github.workspace }}/app/build/outputs/mapping
